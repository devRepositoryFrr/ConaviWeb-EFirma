@model ConaviWeb.Model.Request.FileRequest
@{
    ViewBag.Title = "Baja";
}

<form id="formSign" class="submit-once" enctype="multipart/form-data" method="post" asp-route="Register">
    <div class="row">
        <div class="form-group col-md-4">
            <div id="spinner" class="spinner-border text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
        <div class="form-group col-md-4">
            <div class="form-group" id="alert">
                @Html.Raw(@ViewBag.Alert)
            </div>
        </div>
        <div class="form-group col-md-4">
            <button class="btn btn-primary pull-right" id="btnPart" type="button"><i class="fa fa-cloud-upload" aria-hidden="true"></i> Borrar P</button>
            <button class="btn btn-primary pull-right" id="btnFil" type="button"><i class="fa fa-cloud-upload" aria-hidden="true"></i> Borrar A</button>
        </div>
    </div>
    <div class="row">

        <div class="form-group col-md-4">
            <div class="alert alert-danger" asp-validation-summary="ModelOnly"><button class="close" data-dismiss="alert" aria-hidden="true">&times;</button></div>
            <label asp-for="Partition"></label>
            <select id="slctPartition" class="form-control" asp-for="Partition" asp-items="@(new SelectList((System.Collections.IEnumerable)ViewData["Partitions"], "Id", "Text"))">
                <option value="">--Select--</option>
            </select>
            <span asp-validation-for="Partition" class="text-danger"></span>
        </div>
        <div class="form-group col-md-4">

        </div>
        <div class="form-group col-md-4">

        </div>
    </div>
    <div class="form-group" id="div_table">
        <table id="table" class="table" style="width:100%">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th><input type="checkbox" class="master"></th>
                    <th>
                        RUTA
                    </th>
                    <th>
                        NOMBRE
                    </th>
                    <th>
                        FECHA CARGA
                    </th>
                    <th>
                        ESTATUS
                    </th>
                    <th>
                        DETALLE
                    </th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
    <div class="form-group">
        @*<label asp-for="ArrayFiles"></label>*@
        <input class="form-control" id="arrayCHK"  readonly />
        <input class="form-control" id="inpObs"/>
    </div>

    <br />
    <br />
    <br />
</form>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.3/css/jquery.dataTables.css">
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.11.3/js/jquery.dataTables.js"></script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
        var table;
        $(document).ready(function () {
            $("#spinner").hide();
            showAlert();
            showTable(0);
            $('#slctPartition').on('change', function () {
                //console.log("OnChange");
                var estatus = this.value;
                if (estatus == 0) {
                    table.clear()
                        .draw();
                    // $("#btnAddProcedure").attr('href', '#');
                } else {
                    showTable(estatus);
                }

            });
            $("#btnFil").click(function () {
                let ids = $("#arrayCHK").val();
                let obs = $("#inpObs").val();
                console.log(ids, "-", obs )
                let obj = {
                    ids: ids,
                    obs: obs,
                };
                
            $.ajax({
            type: "post",
            url: "@Url.Action("BajaArchivos", "Baja")", // Url
                data: { ids: ids, obs: obs },
                dataType: "text",
                success: function (data) {
                    console.log(data);
                $('#spinner').hide();
                $("#alert").html(data.message).fadeIn("slow");
                showAlert();
            }
        })
            });
            //Filtro por columna DataTable JQuery
            $('#table thead tr').clone(true).appendTo('#table thead').find('th:eq(0)').text('');
            $('#table thead tr:eq(1) th').not(':eq(0),:eq(5)').each(function (i) {
                var title = $(this).text();
                $(this).html('<input type="text" placeholder="Buscar ' + title + '" />');

                $('input', this).on('keyup change', function () {
                    if (table.column(i + 1).search() !== this.value) {
                        table.column(i + 2)
                            .search(this.value)
                            .draw();
                    }
                });
            });
            // Handle click on "Select all" control
            $('.master').on('click', function () {
                // Get all rows with search applied
                var rows = table.rows({ 'search': 'applied' }).nodes();
                // Check/uncheck checkboxes for all rows in the table
                $('input[type="checkbox"]', rows).prop('checked', this.checked);
                var result = setArrayChks();
            });

            // Handle click on checkbox to set state of "Select all" control
            $('#table tbody').on('change', 'input[type="checkbox"]', function () {
                var result = setArrayChks();
                // If checkbox is not checked
                if (!this.checked) {
                    var el = $('.master').get(0);
                    // If "Select all" control is checked and has 'indeterminate' property
                    if (el && el.checked && ('indeterminate' in el)) {
                        // Set visual state of "Select all" control
                        // as 'indeterminate'
                        el.indeterminate = true;
                    }
                }
            });

        });

        $(window).on('beforeunload', function () {
            console.log("before");
            $('.spinner').css('display', 'block');
        });

        function showTable(estatus) {
            $("#spinner").show();
            table = $('#table').DataTable({
                "proccessing": true,
                "serverSide": false,
                "ajax": {
                    url: "/Lista/ListDetailAjax" + '/' + estatus,
                    type: 'GET',
                    headers: { 'RequestVerificationToken': $('@Html.AntiForgeryToken()').val() },
                    complete: function () {
                        $("#spinner").hide();
                    }
                },
                "columnDefs": columns,
                "order": [[0, "desc"]],
                "autoWidth": true,
                "destroy": true,
                "scrollY": '700px',
                "scrollCollapse": true,
                "paging": true,
                "info": true,
                "buttons": ['excel'],
                "scrollX": true,
                "fixedColumns": true,
                "ordering": false,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    }
                }
            });
        }
        var columns = [
            {
                "targets": -1,
                "data": null,
                "render": function (data, type, row, meta) {
                    //return '<a href="/customers/edit/' + row.id + '">Edit</a> | <a href="/customers/details/' + row.id + '">Details</a> | <a href="/customers/delete/' + row.id + '">Delete</a>';
                    return '<a href="../' + row.filePath + "/" + row.fileName + '" target="_blank"><i class="fa fa-file-pdf-o gold" style="font-size:25px;"></i></a>';
                },
                "sortable": false,
                "className": 'text-center'
            },
            { "name": "Id", "data": "id", "targets": 0, "visible": false },
            {
                "targets": 1,
                'data': 'id',
                'render': function (data, type, row) {
                    //if (type === 'display') {
                        //if (row.status == 'Cargado' || row.status == 'Parcial') {
                            data = '<input type="checkbox" id="' + data + '" class="sub_chk" value="' + data + '">';
                        /*} else {
                            data = '';
                        }*/
                    //}
                    return data;
                }
            },
            { "name": "FilePath", "data": "filePath", "targets": 2 },
            { "name": "FileName", "data": "fileName", "targets": 3 },
            { "name": "DateUpload", "data": "dateUpload", "targets": 4 },
            { "name": "Status", "data": "status", "targets": 5 }
        ];

        function setArrayChks(){
            var matches = [];
            var checkedcollection = table.$(".sub_chk:checked", { "page": "all" });
            checkedcollection.each(function (index, elem) {
                matches.push($(elem).val());
            });
            console.log(matches);
            //matches && matches.length > 0
            if (matches.length > 0) {
                var array = matches.join(",");
                $('[id$=arrayCHK]').val(array);
                return true;
            } else {
                $('[id$=arrayCHK]').val('');
                return false;
            }
        }

        function showAlert() {

            setTimeout(function () {
                $("#alerta").fadeOut(1500);

            }, 3000);


            setTimeout(function () {

                $("#alerta").remove();
            }, 6000);

        }

</script>
}